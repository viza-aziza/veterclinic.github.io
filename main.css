body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
    transition: background-color 0.3s ease;
}


header {
    background-color: #333;
    color: white;
    padding: 20px 0;
}

.logo {
    font-size: 24px;
    font-weight: bold;
    color: #FFD700; 
    text-decoration: none;
    margin-left: 50px;
}

nav ul {
    list-style: none;
    padding: 0;
    margin: 0;
    text-align: right;
    margin-right: 50px;
    
}

nav li {
    display: inline;
    margin-left: 20px;
}

nav a {
    color: white;
    text-decoration: none;
    transition: color 0.3s ease, transform 0.3s ease;
}

nav a:hover {
    color: #FFD700; 
    transform: scale(1.1);
}

.hero {
    text-align: center;
    padding: 100px 0;
    background-image: url('hero-image.jpg'); 
    background-size: cover;
    background-position: center;
    color: white;
}

.hero h1 {
    font-size: 36px;
    margin-bottom: 20px;
}

.hero p {
    font-size: 18px;
    margin-bottom: 30px;
}

.hero button {
    background-color: #FFD700; 
    color: white;
    padding: 15px 30px;
    border: none;
    border-radius: 5px;
    font-size: 18px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease;

}

.hero button:hover {
    background-color: #DAA520;
    transform: scale(1.05); 
}


.services {
    padding: 50px 0;
    text-align: center;
}

.service-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-gap: 20px;
    padding: 0 20px;
}

.service img {
    width: 100%;
    height: auto;
    margin-bottom: 10px;
    transition: transform 0.3s ease; 
}

.service img:hover {
    transform: scale(1.05); 
}


.about {
    padding: 50px 0;
    text-align: center;
}

.about img {
    max-width: 80%;
    margin: 20px auto;
    display: block;
}

footer {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 20px 0;
}

.mapID {
    width: 80%;
}


@media (max-width: 768px) {
    .hero h1 {
        font-size: 28px;
    }
    .hero p {
        font-size: 16px;
    }
    .service-grid {
        grid-template-columns: 1fr; 
    }
}
/* main.css (modified) */

/* ... your existing styles ... */

body {
    /* ... other body styles ... */
    display: flex; /* Enable flexbox for body */
    min-height: 100vh; /* Ensure body takes up full viewport height */
    flex-direction: column; /* Stack header, main, and footer vertically */
}

main {
    flex: 1; /* Allow main content to expand and push footer down */
    /* ... other main styles ... */
}


.service img {
    width: 100%;
    height: auto;
    margin-bottom: 1rem;
    transition: transform 0.3s ease;
    border-radius: 10px; /* Add rounded corners */
    object-fit: cover; /* Maintain aspect ratio while filling container */
}

.service-container {
    display: flex;
    align-items: center;
    border-radius: 10px;
    overflow: hidden; /* Hide any overflow */
    box-shadow: 0 2px 4px rgba(5, 5, 5, 0.2);
    margin-bottom: 20px; /* Add some space between services */
    background-color: #ffffff;
}



.service-description {
    flex: 1;
    padding: 1rem;
    margin-bottom: 20px;
}

.service-description h3 {
    margin-bottom: 0.5rem;
}

.service-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-gap: 20px;
    padding: 20px; /* Adjusted spacing */
}

.about-content {
    display: flex;
    flex-direction: column; /* Stack items vertically */
    align-items: center; /* Center items horizontally */
    margin-bottom: 20px; /* Add space below about section */
}
.about-image-container {
    width: 100%;
    margin-top: 1rem;
}

.about-image {
    width: 100%;
    height: 300px; /* Adjust height as needed */
    object-fit: cover;
    border-radius: 10px;
}
.hidden {
    opacity: 0;
    transform: translateY(20px); /* Or any other transformation */
    transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out; /* Adjust duration and easing as needed */
}

.hidden.show {
    opacity: 1;
    transform: translateY(0);
}

